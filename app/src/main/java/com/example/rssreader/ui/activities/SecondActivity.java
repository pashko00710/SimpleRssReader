package com.example.rssreader.ui.activities;import android.annotation.TargetApi;import android.app.ProgressDialog;import android.content.Context;import android.os.AsyncTask;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.support.v7.app.AppCompatActivity;import android.widget.ImageView;import android.widget.TextView;import com.example.rssreader.R;import com.example.rssreader.utils.ConstantsManager;import com.squareup.picasso.Picasso;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import java.io.IOException;import butterknife.BindView;import butterknife.ButterKnife;public class SecondActivity extends AppCompatActivity {    String itemTitle, itemDate, itemLink, itemPicture;    @BindView(R.id.second_textview_title)    TextView titleView;    @BindView(R.id.second_textview_pubdate)    TextView dateView;    @BindView(R.id.second_textview_guid)    TextView guidView;    @BindView(R.id.second_imageview_title)    ImageView pictureView;    @BindView(R.id.second_textview_articletext)    TextView articleView;    ProgressDialog progressDialog;    @TargetApi(Build.VERSION_CODES.LOLLIPOP)    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_second);        ButterKnife.bind(this);        itemTitle = getIntent().getExtras().getString("title");        itemDate = getIntent().getExtras().getString("date");        itemLink = getIntent().getExtras().getString("link");        itemPicture = getIntent().getExtras().getString("pic");        ReadFullArticle readArticle = new ReadFullArticle(this, itemLink);        readArticle.execute();//        Log.e("item", itemPicture);        if(itemPicture == null){            pictureView.setImageDrawable(getDrawable(R.drawable.cap));        } else {            Picasso.with(getApplicationContext()).load(itemPicture).into(pictureView);        }        titleView.setText(itemTitle);        dateView.setText(itemDate);        guidView.setText(itemLink);    }    public class ReadFullArticle extends AsyncTask<Void, Void, Void> {        Context context;        String urlArticle;        String finallLnkText = "";        public ReadFullArticle(Context context, String urlArticle) {            this.urlArticle=urlArticle;            this.context = context;            progressDialog = new ProgressDialog(context);            progressDialog.setMessage(context.getString(R.string.loading));        }        @Override        protected Void doInBackground(Void... params) {            Document doc = null;//Здесь хранится будет разобранный html документ            try {                //Считываем заглавную страницу                doc = Jsoup.connect(urlArticle).get();            } catch (IOException e) {                //Если не получилось считать                e.printStackTrace();            }            //Если всё считалось, что вытаскиваем из считанного html документа заголовок            if (doc!=null) {                finallLnkText = doc.getElementsByTag("p").text();            } else {                finallLnkText = ConstantsManager.ERROR;            }            return null;        }        @Override        protected void onPreExecute() {            progressDialog.show();            super.onPreExecute();        }        @Override        protected void onPostExecute(Void result) {            super.onPostExecute(result);            Handler handler = new Handler();            handler.postDelayed(new Runnable() {                public void run() {                    progressDialog.dismiss();                }            }, 620);            articleView.setText(finallLnkText);        }    }}